{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AJAY PATIDAR\\\\Desktop\\\\new project\\\\Manage-Employees-main\\\\src\\\\context\\\\EmployeeContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useReducer } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EmployeeContext = /*#__PURE__*/createContext();\n\nconst EmployeeContextProvider = props => {\n  _s();\n\n  /*   const [employees, setEmployees] = useState([\n    {\n      id: uuidv4(),\n      name: \"Thomas Hardy\",\n      email: \"thomashardy@mail.com\",\n      address: \"89 Chiaroscuro Rd, Portland, USA\",\n      phone: \"(171) 555-2222\",\n    },\n    {\n      id: uuidv4(),\n      name: \"Dominique Perrier\",\n      email: \"dominiqueperrier@mail.com\",\n      address: \"Obere Str. 57, Berlin, Germany\",\n      phone: \"(313) 555-5735\",\n    },\n    {\n      id: uuidv4(),\n      name: \"Maria Anders\",\n      email: \"mariaanders@mail.com\",\n      address: \"25, rue Lauriston, Paris, France\",\n      phone: \"(503) 555-9931\",\n    },\n    {\n      id: uuidv4(),\n      name: \"Fran Wilson\",\n      email: \"franwilson@mail.com\",\n      address: \"C/ Araquil, 67, Madrid, Spain\",\n      phone: \"(204) 619-5731\",\n    },\n    {\n      id: uuidv4(),\n      name: \"Martin Blank\",\n      email: \"martinblank@mail.com\",\n      address: \"Via Monte Bianco 34, Turin, Italy\",\n      phone: \"(480) 631-2097\",\n    },\n  ]); */\n  const reducer = (employees, action) => {\n    switch (action.type) {\n      case \"add_employee\":\n        return [...employees, {\n          id: uuidv4(),\n          name: action.employee.name,\n          email: action.employee.email,\n          address: action.employee.address,\n          phone: action.employee.phone\n        }];\n\n      case \"remove_employee\":\n        return employees.filter(employee => employee.id !== action.id);\n\n      case \"update_employee\":\n        return employees.map(employee => employee.id === action.id ? action.updatedEmployee : employee);\n\n      default:\n        return employees;\n    }\n  };\n\n  const [employees, dispatch] = useReducer(reducer, [], () => {\n    const employees = localStorage.getItem(\"employees\");\n    return employees ? JSON.parse(employees) : [];\n  });\n  /*   useEffect(() => {\n    const employees = JSON.parse(localStorage.getItem(\"employees\"));\n    setEmployees(employees);\n  }, []); */\n\n  useEffect(() => {\n    localStorage.setItem(\"employees\", JSON.stringify(employees));\n  });\n  const sortedEmployees = employees.sort((a, b) => a.name.localeCompare(b.name));\n  /* const addEmployee = (name, email, address, phone) => {\n    setEmployees([...employees, { id: uuidv4(), name, email, address, phone }]);\n  }; */\n\n  /* const deleteEmployee = (id) => {\n    setEmployees(employees.filter((employee) => employee.id !== id));\n  }; */\n\n  /* const updateEmployee = (id, updatedEmployee) => {\n    setEmployees(\n      employees.map((employee) =>\n        employee.id === id ? updatedEmployee : employee\n      )\n    );\n  }; */\n\n  return (\n    /*#__PURE__*/\n\n    /*  if u want useState\n     <EmployeeContext.Provider\n      value={{ sortedEmployees, addEmployee, deleteEmployee, updateEmployee }}\n    >    \n      {props.children}\n    </EmployeeContext.Provider> */\n    // if u want useReducer\n    _jsxDEV(EmployeeContext.Provider, {\n      value: {\n        sortedEmployees,\n        dispatch\n      },\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(EmployeeContextProvider, \"nantOL+HEl1cnYjH2U2sgUzFZTs=\");\n\n_c = EmployeeContextProvider;\nexport default EmployeeContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeeContextProvider\");","map":{"version":3,"sources":["C:/Users/AJAY PATIDAR/Desktop/new project/Manage-Employees-main/src/context/EmployeeContext.js"],"names":["createContext","useEffect","useReducer","v4","uuidv4","EmployeeContext","EmployeeContextProvider","props","reducer","employees","action","type","id","name","employee","email","address","phone","filter","map","updatedEmployee","dispatch","localStorage","getItem","JSON","parse","setItem","stringify","sortedEmployees","sort","a","b","localeCompare","children"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,SAAxB,EAAmCC,UAAnC,QAAqD,OAArD;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;;AAEA,OAAO,MAAMC,eAAe,gBAAGL,aAAa,EAArC;;AAEP,MAAMM,uBAAuB,GAAIC,KAAD,IAAW;AAAA;;AACzC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEE,QAAMC,OAAO,GAAG,CAACC,SAAD,EAAYC,MAAZ,KAAuB;AACrC,YAAQA,MAAM,CAACC,IAAf;AACE,WAAK,cAAL;AACE,eAAO,CACL,GAAGF,SADE,EAEL;AACEG,UAAAA,EAAE,EAAER,MAAM,EADZ;AAEES,UAAAA,IAAI,EAAEH,MAAM,CAACI,QAAP,CAAgBD,IAFxB;AAGEE,UAAAA,KAAK,EAAEL,MAAM,CAACI,QAAP,CAAgBC,KAHzB;AAIEC,UAAAA,OAAO,EAAEN,MAAM,CAACI,QAAP,CAAgBE,OAJ3B;AAKEC,UAAAA,KAAK,EAAEP,MAAM,CAACI,QAAP,CAAgBG;AALzB,SAFK,CAAP;;AAWF,WAAK,iBAAL;AACE,eAAOR,SAAS,CAACS,MAAV,CAAkBJ,QAAD,IAAcA,QAAQ,CAACF,EAAT,KAAgBF,MAAM,CAACE,EAAtD,CAAP;;AAEF,WAAK,iBAAL;AACE,eAAOH,SAAS,CAACU,GAAV,CAAeL,QAAD,IACnBA,QAAQ,CAACF,EAAT,KAAgBF,MAAM,CAACE,EAAvB,GAA4BF,MAAM,CAACU,eAAnC,GAAqDN,QADhD,CAAP;;AAGF;AACE,eAAOL,SAAP;AArBJ;AAuBD,GAxBD;;AA0BA,QAAM,CAACA,SAAD,EAAYY,QAAZ,IAAwBnB,UAAU,CAACM,OAAD,EAAU,EAAV,EAAc,MAAM;AAC1D,UAAMC,SAAS,GAAGa,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAlB;AACA,WAAOd,SAAS,GAAGe,IAAI,CAACC,KAAL,CAAWhB,SAAX,CAAH,GAA2B,EAA3C;AACD,GAHuC,CAAxC;AAKA;AACF;AACA;AACA;;AAEER,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,YAAY,CAACI,OAAb,CAAqB,WAArB,EAAkCF,IAAI,CAACG,SAAL,CAAelB,SAAf,CAAlC;AACD,GAFQ,CAAT;AAIA,QAAMmB,eAAe,GAAGnB,SAAS,CAACoB,IAAV,CAAe,CAACC,CAAD,EAAIC,CAAJ,KACrCD,CAAC,CAACjB,IAAF,CAAOmB,aAAP,CAAqBD,CAAC,CAAClB,IAAvB,CADsB,CAAxB;AAIA;AACF;AACA;;AAEE;AACF;AACA;;AAEE;AACF;AACA;AACA;AACA;AACA;AACA;;AAEE;AAAA;;AACE;AACJ;AACA;AACA;AACA;AACA;AAEI;AACA,YAAC,eAAD,CAAiB,QAAjB;AAA0B,MAAA,KAAK,EAAE;AAAEe,QAAAA,eAAF;AAAmBP,QAAAA;AAAnB,OAAjC;AAAA,gBACGd,KAAK,CAAC0B;AADT;AAAA;AAAA;AAAA;AAAA;AATF;AAaD,CAhHD;;GAAM3B,uB;;KAAAA,uB;AAkHN,eAAeA,uBAAf","sourcesContent":["import { createContext, useEffect, useReducer } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport const EmployeeContext = createContext();\n\nconst EmployeeContextProvider = (props) => {\n  /*   const [employees, setEmployees] = useState([\n    {\n      id: uuidv4(),\n      name: \"Thomas Hardy\",\n      email: \"thomashardy@mail.com\",\n      address: \"89 Chiaroscuro Rd, Portland, USA\",\n      phone: \"(171) 555-2222\",\n    },\n    {\n      id: uuidv4(),\n      name: \"Dominique Perrier\",\n      email: \"dominiqueperrier@mail.com\",\n      address: \"Obere Str. 57, Berlin, Germany\",\n      phone: \"(313) 555-5735\",\n    },\n    {\n      id: uuidv4(),\n      name: \"Maria Anders\",\n      email: \"mariaanders@mail.com\",\n      address: \"25, rue Lauriston, Paris, France\",\n      phone: \"(503) 555-9931\",\n    },\n    {\n      id: uuidv4(),\n      name: \"Fran Wilson\",\n      email: \"franwilson@mail.com\",\n      address: \"C/ Araquil, 67, Madrid, Spain\",\n      phone: \"(204) 619-5731\",\n    },\n    {\n      id: uuidv4(),\n      name: \"Martin Blank\",\n      email: \"martinblank@mail.com\",\n      address: \"Via Monte Bianco 34, Turin, Italy\",\n      phone: \"(480) 631-2097\",\n    },\n  ]); */\n\n  const reducer = (employees, action) => {\n    switch (action.type) {\n      case \"add_employee\":\n        return [\n          ...employees,\n          {\n            id: uuidv4(),\n            name: action.employee.name,\n            email: action.employee.email,\n            address: action.employee.address,\n            phone: action.employee.phone,\n          },\n        ];\n\n      case \"remove_employee\":\n        return employees.filter((employee) => employee.id !== action.id);\n\n      case \"update_employee\":\n        return employees.map((employee) =>\n          employee.id === action.id ? action.updatedEmployee : employee\n        );\n      default:\n        return employees;\n    }\n  };\n\n  const [employees, dispatch] = useReducer(reducer, [], () => {\n    const employees = localStorage.getItem(\"employees\");\n    return employees ? JSON.parse(employees) : [];\n  });\n\n  /*   useEffect(() => {\n    const employees = JSON.parse(localStorage.getItem(\"employees\"));\n    setEmployees(employees);\n  }, []); */\n\n  useEffect(() => {\n    localStorage.setItem(\"employees\", JSON.stringify(employees));\n  });\n\n  const sortedEmployees = employees.sort((a, b) =>\n    a.name.localeCompare(b.name)\n  );\n\n  /* const addEmployee = (name, email, address, phone) => {\n    setEmployees([...employees, { id: uuidv4(), name, email, address, phone }]);\n  }; */\n\n  /* const deleteEmployee = (id) => {\n    setEmployees(employees.filter((employee) => employee.id !== id));\n  }; */\n\n  /* const updateEmployee = (id, updatedEmployee) => {\n    setEmployees(\n      employees.map((employee) =>\n        employee.id === id ? updatedEmployee : employee\n      )\n    );\n  }; */\n\n  return (\n    /*  if u want useState\n     <EmployeeContext.Provider\n      value={{ sortedEmployees, addEmployee, deleteEmployee, updateEmployee }}\n    >    \n      {props.children}\n    </EmployeeContext.Provider> */\n\n    // if u want useReducer\n    <EmployeeContext.Provider value={{ sortedEmployees, dispatch }}>\n      {props.children}\n    </EmployeeContext.Provider>\n  );\n};\n\nexport default EmployeeContextProvider;\n"]},"metadata":{},"sourceType":"module"}