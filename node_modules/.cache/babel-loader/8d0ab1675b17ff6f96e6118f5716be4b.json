{"ast":null,"code":"import _slicedToArray from\"C:/Users/AJAY PATIDAR/Desktop/new project/Manage-Employees-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _toConsumableArray from\"C:/Users/AJAY PATIDAR/Desktop/new project/Manage-Employees-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{createContext,useEffect,useReducer}from\"react\";import{v4 as uuidv4}from\"uuid\";import{jsx as _jsx}from\"react/jsx-runtime\";export var EmployeeContext=/*#__PURE__*/createContext();var EmployeeContextProvider=function EmployeeContextProvider(props){/*   const [employees, setEmployees] = useState([\n    {\n      id: uuidv4(),\n      name: \"Thomas Hardy\",\n      email: \"thomashardy@mail.com\",\n      address: \"89 Chiaroscuro Rd, Portland, USA\",\n      phone: \"(171) 555-2222\",\n    },\n    {\n      id: uuidv4(),\n      name: \"Dominique Perrier\",\n      email: \"dominiqueperrier@mail.com\",\n      address: \"Obere Str. 57, Berlin, Germany\",\n      phone: \"(313) 555-5735\",\n    },\n    {\n      id: uuidv4(),\n      name: \"Maria Anders\",\n      email: \"mariaanders@mail.com\",\n      address: \"25, rue Lauriston, Paris, France\",\n      phone: \"(503) 555-9931\",\n    },\n    {\n      id: uuidv4(),\n      name: \"Fran Wilson\",\n      email: \"franwilson@mail.com\",\n      address: \"C/ Araquil, 67, Madrid, Spain\",\n      phone: \"(204) 619-5731\",\n    },\n    {\n      id: uuidv4(),\n      name: \"Martin Blank\",\n      email: \"martinblank@mail.com\",\n      address: \"Via Monte Bianco 34, Turin, Italy\",\n      phone: \"(480) 631-2097\",\n    },\n  ]); */var reducer=function reducer(employees,action){switch(action.type){case\"add_employee\":return[].concat(_toConsumableArray(employees),[{id:uuidv4(),name:action.employee.name,email:action.employee.email,address:action.employee.address,phone:action.employee.phone}]);case\"remove_employee\":return employees.filter(function(employee){return employee.id!==action.id;});case\"update_employee\":return employees.map(function(employee){return employee.id===action.id?action.updatedEmployee:employee;});default:return employees;}};var _useReducer=useReducer(reducer,[],function(){var employees=localStorage.getItem(\"employees\");return employees?JSON.parse(employees):[];}),_useReducer2=_slicedToArray(_useReducer,2),employees=_useReducer2[0],dispatch=_useReducer2[1];/*   useEffect(() => {\n    const employees = JSON.parse(localStorage.getItem(\"employees\"));\n    setEmployees(employees);\n  }, []); */useEffect(function(){localStorage.setItem(\"employees\",JSON.stringify(employees));});var sortedEmployees=employees.sort(function(a,b){return a.name.localeCompare(b.name);});/* const addEmployee = (name, email, address, phone) => {\n    setEmployees([...employees, { id: uuidv4(), name, email, address, phone }]);\n  }; */ /* const deleteEmployee = (id) => {\n    setEmployees(employees.filter((employee) => employee.id !== id));\n  }; */ /* const updateEmployee = (id, updatedEmployee) => {\n    setEmployees(\n      employees.map((employee) =>\n        employee.id === id ? updatedEmployee : employee\n      )\n    );\n  }; */return/*#__PURE__*/ (/*  if u want useState\n     <EmployeeContext.Provider\n      value={{ sortedEmployees, addEmployee, deleteEmployee, updateEmployee }}\n    >    \n      {props.children}\n    </EmployeeContext.Provider> */ // if u want useReducer\n_jsx(EmployeeContext.Provider,{value:{sortedEmployees:sortedEmployees,dispatch:dispatch},children:props.children}));};export default EmployeeContextProvider;","map":{"version":3,"sources":["C:/Users/AJAY PATIDAR/Desktop/new project/Manage-Employees-main/src/context/EmployeeContext.js"],"names":["createContext","useEffect","useReducer","v4","uuidv4","EmployeeContext","EmployeeContextProvider","props","reducer","employees","action","type","id","name","employee","email","address","phone","filter","map","updatedEmployee","localStorage","getItem","JSON","parse","dispatch","setItem","stringify","sortedEmployees","sort","a","b","localeCompare","children"],"mappings":"oXAAA,OAASA,aAAT,CAAwBC,SAAxB,CAAmCC,UAAnC,KAAqD,OAArD,CACA,OAASC,EAAE,GAAIC,CAAAA,MAAf,KAA6B,MAA7B,C,2CAEA,MAAO,IAAMC,CAAAA,eAAe,cAAGL,aAAa,EAArC,CAEP,GAAMM,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAACC,KAAD,CAAW,CACzC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAEE,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,SAAD,CAAYC,MAAZ,CAAuB,CACrC,OAAQA,MAAM,CAACC,IAAf,EACE,IAAK,cAAL,CACE,mCACKF,SADL,GAEE,CACEG,EAAE,CAAER,MAAM,EADZ,CAEES,IAAI,CAAEH,MAAM,CAACI,QAAP,CAAgBD,IAFxB,CAGEE,KAAK,CAAEL,MAAM,CAACI,QAAP,CAAgBC,KAHzB,CAIEC,OAAO,CAAEN,MAAM,CAACI,QAAP,CAAgBE,OAJ3B,CAKEC,KAAK,CAAEP,MAAM,CAACI,QAAP,CAAgBG,KALzB,CAFF,GAWF,IAAK,iBAAL,CACE,MAAOR,CAAAA,SAAS,CAACS,MAAV,CAAiB,SAACJ,QAAD,QAAcA,CAAAA,QAAQ,CAACF,EAAT,GAAgBF,MAAM,CAACE,EAArC,EAAjB,CAAP,CAEF,IAAK,iBAAL,CACE,MAAOH,CAAAA,SAAS,CAACU,GAAV,CAAc,SAACL,QAAD,QACnBA,CAAAA,QAAQ,CAACF,EAAT,GAAgBF,MAAM,CAACE,EAAvB,CAA4BF,MAAM,CAACU,eAAnC,CAAqDN,QADlC,EAAd,CAAP,CAGF,QACE,MAAOL,CAAAA,SAAP,CArBJ,CAuBD,CAxBD,CA0BA,gBAA8BP,UAAU,CAACM,OAAD,CAAU,EAAV,CAAc,UAAM,CAC1D,GAAMC,CAAAA,SAAS,CAAGY,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAlB,CACA,MAAOb,CAAAA,SAAS,CAAGc,IAAI,CAACC,KAAL,CAAWf,SAAX,CAAH,CAA2B,EAA3C,CACD,CAHuC,CAAxC,4CAAOA,SAAP,iBAAkBgB,QAAlB,iBAKA;AACF;AACA;AACA,YAEExB,SAAS,CAAC,UAAM,CACdoB,YAAY,CAACK,OAAb,CAAqB,WAArB,CAAkCH,IAAI,CAACI,SAAL,CAAelB,SAAf,CAAlC,EACD,CAFQ,CAAT,CAIA,GAAMmB,CAAAA,eAAe,CAAGnB,SAAS,CAACoB,IAAV,CAAe,SAACC,CAAD,CAAIC,CAAJ,QACrCD,CAAAA,CAAC,CAACjB,IAAF,CAAOmB,aAAP,CAAqBD,CAAC,CAAClB,IAAvB,CADqC,EAAf,CAAxB,CAIA;AACF;AACA,OArF2C,CAuFzC;AACF;AACA,OAzF2C,CA2FzC;AACF;AACA;AACA;AACA;AACA;AACA,OAEE,oBACE;AACJ;AACA;AACA;AACA;AACA,kCANE,CAQE;AACA,KAAC,eAAD,CAAiB,QAAjB,EAA0B,KAAK,CAAE,CAAEe,eAAe,CAAfA,eAAF,CAAmBH,QAAQ,CAARA,QAAnB,CAAjC,UACGlB,KAAK,CAAC0B,QADT,EATF,EAaD,CAhHD,CAkHA,cAAe3B,CAAAA,uBAAf","sourcesContent":["import { createContext, useEffect, useReducer } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport const EmployeeContext = createContext();\n\nconst EmployeeContextProvider = (props) => {\n  /*   const [employees, setEmployees] = useState([\n    {\n      id: uuidv4(),\n      name: \"Thomas Hardy\",\n      email: \"thomashardy@mail.com\",\n      address: \"89 Chiaroscuro Rd, Portland, USA\",\n      phone: \"(171) 555-2222\",\n    },\n    {\n      id: uuidv4(),\n      name: \"Dominique Perrier\",\n      email: \"dominiqueperrier@mail.com\",\n      address: \"Obere Str. 57, Berlin, Germany\",\n      phone: \"(313) 555-5735\",\n    },\n    {\n      id: uuidv4(),\n      name: \"Maria Anders\",\n      email: \"mariaanders@mail.com\",\n      address: \"25, rue Lauriston, Paris, France\",\n      phone: \"(503) 555-9931\",\n    },\n    {\n      id: uuidv4(),\n      name: \"Fran Wilson\",\n      email: \"franwilson@mail.com\",\n      address: \"C/ Araquil, 67, Madrid, Spain\",\n      phone: \"(204) 619-5731\",\n    },\n    {\n      id: uuidv4(),\n      name: \"Martin Blank\",\n      email: \"martinblank@mail.com\",\n      address: \"Via Monte Bianco 34, Turin, Italy\",\n      phone: \"(480) 631-2097\",\n    },\n  ]); */\n\n  const reducer = (employees, action) => {\n    switch (action.type) {\n      case \"add_employee\":\n        return [\n          ...employees,\n          {\n            id: uuidv4(),\n            name: action.employee.name,\n            email: action.employee.email,\n            address: action.employee.address,\n            phone: action.employee.phone,\n          },\n        ];\n\n      case \"remove_employee\":\n        return employees.filter((employee) => employee.id !== action.id);\n\n      case \"update_employee\":\n        return employees.map((employee) =>\n          employee.id === action.id ? action.updatedEmployee : employee\n        );\n      default:\n        return employees;\n    }\n  };\n\n  const [employees, dispatch] = useReducer(reducer, [], () => {\n    const employees = localStorage.getItem(\"employees\");\n    return employees ? JSON.parse(employees) : [];\n  });\n\n  /*   useEffect(() => {\n    const employees = JSON.parse(localStorage.getItem(\"employees\"));\n    setEmployees(employees);\n  }, []); */\n\n  useEffect(() => {\n    localStorage.setItem(\"employees\", JSON.stringify(employees));\n  });\n\n  const sortedEmployees = employees.sort((a, b) =>\n    a.name.localeCompare(b.name)\n  );\n\n  /* const addEmployee = (name, email, address, phone) => {\n    setEmployees([...employees, { id: uuidv4(), name, email, address, phone }]);\n  }; */\n\n  /* const deleteEmployee = (id) => {\n    setEmployees(employees.filter((employee) => employee.id !== id));\n  }; */\n\n  /* const updateEmployee = (id, updatedEmployee) => {\n    setEmployees(\n      employees.map((employee) =>\n        employee.id === id ? updatedEmployee : employee\n      )\n    );\n  }; */\n\n  return (\n    /*  if u want useState\n     <EmployeeContext.Provider\n      value={{ sortedEmployees, addEmployee, deleteEmployee, updateEmployee }}\n    >    \n      {props.children}\n    </EmployeeContext.Provider> */\n\n    // if u want useReducer\n    <EmployeeContext.Provider value={{ sortedEmployees, dispatch }}>\n      {props.children}\n    </EmployeeContext.Provider>\n  );\n};\n\nexport default EmployeeContextProvider;\n"]},"metadata":{},"sourceType":"module"}